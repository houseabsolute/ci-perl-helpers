parameters:
  - name: image_version
    type: string
    default: ''

jobs:
  - job: SetImageVersion
    displayName: Set the image_version if none was set explicitly
    pool:
      vmImage: ubuntu-18.04
    steps:
      - checkout: ci-perl-helpers
        condition: eq( '${{ parameters.image_version }}', '' )
      - bash: |
          set -e
          set -x
          if [ -z "${{ parameters.image_version }}" ]; then
              tag=$( git describe --tags )
              if [[ "$tag" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                  echo "Setting image version from tag - $tag"
                  image_version=$tag
              else
                  # Our checkout is in a detached head state, so we need to
                  # figure out what branch it corresponds to in the remote.

                  # Get all the remote branch names.
                  remote_heads="$( git ls-remote --heads origin )"
                  # Get the commit SHA for our local checkout.
                  local_head_ref="$( git rev-parse HEAD )"
                  # Find the first match in our remote heads for our local checkout.
                  our_head="$( echo "$remote_heads" | grep $local_head_ref | head -1 )"
                  # Extract branch name from the heads info.
                  branch=$( echo "$our_head" | cut -d / -f 3 )
                  echo "Setting image version from branch name - $branch"
                  image_version=$branch
              fi
          else
              echo "Image version was set as template parameter - ${{ parameters.image_version }}"
              image_version="${{ parameters.image_version }}"
          fi
          set +x
          echo "##vso[task.setVariable variable=image_version;isOutput=true]$image_version"
        name: ImageVersionProducer
        displayName: Get image from template parameters or from git checkout
